{"version":3,"file":"static/js/8015.36ab31f0.chunk.js","mappings":"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","sources":["../node_modules/amis-ui/lib/components/Markdown.js","../node_modules/amis-ui/lib/components/Markdown2.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/markdown-it-html5-media/lib/index.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/index.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/token.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/index.js","../node_modules/mdurl/parse.js","../node_modules/punycode/punycode.es6.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/**\n * amis-ui v2.0.2\n * Copyright 2018-2022 fex\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Markdown = require('./Markdown2.js');\n\n\n\nexports[\"default\"] = Markdown[\"default\"];\nexports.markdown = Markdown.markdown;\n","/**\n * amis-ui v2.0.2\n * Copyright 2018-2022 fex\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar markdownIt = require('markdown-it');\nvar markdownItHtml5Media = require('markdown-it-html5-media');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar markdownIt__default = /*#__PURE__*/_interopDefaultLegacy(markdownIt);\n\nvar doMarkdown = markdownIt__default[\"default\"]();\ndoMarkdown.use(markdownItHtml5Media.html5Media);\nfunction markdown(content, options) {\n    if (options) {\n        doMarkdown.set(options);\n    }\n    return doMarkdown.render(content);\n}\nvar Markdown = /** @class */ (function (_super) {\n    tslib.__extends(Markdown, _super);\n    function Markdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.htmlRef = _this.htmlRef.bind(_this);\n        return _this;\n    }\n    Markdown.prototype.htmlRef = function (dom) {\n        this.dom = dom;\n        if (!dom) {\n            return;\n        }\n        this._render();\n    };\n    Markdown.prototype.componentDidUpdate = function (nextProps) {\n        if (this.props.content !== nextProps.content) {\n            this._render();\n        }\n    };\n    Markdown.prototype._render = function () {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var _a, content, options;\n            return tslib.__generator(this, function (_b) {\n                _a = this.props, content = _a.content, options = _a.options;\n                this.dom.innerHTML = markdown(content, options);\n                return [2 /*return*/];\n            });\n        });\n    };\n    Markdown.prototype.render = function () {\n        return (React__default[\"default\"].createElement(\"div\", { \"data-testid\": \"markdown-body\", className: \"markdown-body\", ref: this.htmlRef }));\n    };\n    Markdown.defaultProps = {\n        content: '',\n        options: {\n            linkify: true\n        }\n    };\n    return Markdown;\n}(React__default[\"default\"].Component));\n\nexports[\"default\"] = Markdown;\nexports.markdown = markdown;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n/* eslint complexity: \"off\" */\n\n\n/**\n * A minimalist `markdown-it` plugin for parsing video/audio references inside\n * markdown image syntax as `<video>` / `<audio>` tags.\n *\n * @namespace HTML5Media\n */\n\n// We can only detect video/audio files from the extension in the URL.\n// We ignore MP1 and MP2 (not in active use) and default to video for ambiguous\n// extensions (MPG, MP4)\nconst validAudioExtensions = ['aac', 'm4a', 'mp3', 'oga', 'ogg', 'wav'];\nconst validVideoExtensions = ['mp4', 'm4v', 'ogv', 'webm', 'mpg', 'mpeg'];\n\n/**\n * @property {Object} messages\n * @property {Object} messages.languageCode\n *  a set of messages identified with a language code, typically an ISO639 code\n * @property {String} messages.languageCode.messageKey\n *  an individual translation of a message to that language, identified with a\n *  message key\n * @typedef {Object} MessagesObj\n */\nlet messages = {\n  en: {\n    'html5 video not supported': 'Your browser does not support playing HTML5 video.',\n    'html5 audio not supported': 'Your browser does not support playing HTML5 audio.',\n    'html5 media fallback link': 'You can <a href=\"%s\" download>download the file</a> instead.',\n    'html5 media description': 'Here is a description of the content: %s'\n  }\n};\n\n/**\n * You can override this function using options.translateFn.\n *\n * @param {String} language\n *  a language code, typically an ISO 639-[1-3] code.\n * @param {String} messageKey\n *  an identifier for the message, typically a short descriptive text\n * @param {String[]} messageParams\n *  Strings to be substituted into the message using some pattern, e.g., %s or\n *  %1$s, %2$s. By default we only use a simple %s pattern.\n * @returns {String}\n *  the translation to use\n * @memberof HTML5Media\n */\nlet translate = function(language, messageKey, messageParams) {\n\n  // Revert back to English default if no message object, or no translation\n  // for this language\n  if (!messages[language] || !messages[language][messageKey])\n    language = 'en';\n\n  if (!messages[language])\n    return '';\n\n  let message = messages[language][messageKey] || '';\n\n  if (messageParams)\n    for (let param of messageParams)\n      message = message.replace('%s', param);\n\n  return message;\n};\n\n\n/**\n * A fork of the built-in image tokenizer which guesses video/audio files based\n * on their extension, and tokenizes them accordingly.\n *\n * @param {Object} state\n *  Markdown-It state\n * @param {Boolean} silent\n *  if true, only validate, don't tokenize\n * @param {MarkdownIt} md\n *  instance of Markdown-It used for utility functions\n * @returns {Boolean}\n * @memberof HTML5Media\n */\nfunction tokenizeImagesAndMedia(state, silent, md) {\n  let attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title,\n    token, tokens, start;\n  let href = '',\n    oldPos = state.pos,\n    max = state.posMax;\n\n  // Exclamation mark followed by open square bracket - ![ - otherwise abort\n  if (state.src.charCodeAt(state.pos) !== 0x21 ||\n    state.src.charCodeAt(state.pos + 1) !== 0x5B)\n    return false;\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // Parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0)\n    return false;\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28) { // Parenthesis: (\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A) // LF \\n\n        break;\n    }\n    if (pos >= max)\n      return false;\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A)\n        break;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!md.utils.isSpace(code) && code !== 0x0A)\n          break;\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29) { // Parenthesis: )\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined')\n      return false;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B) { // Bracket: [\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label)\n      label = state.src.slice(labelStart, labelEnd);\n\n    ref = state.env.references[md.utils.normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n\n  if (silent)\n    return true;\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  content = state.src.slice(labelStart, labelEnd);\n\n  state.md.inline.parse(\n    content,\n    state.md,\n    state.env,\n    tokens = []\n  );\n\n  const mediaType = guessMediaType(href);\n  const tag = mediaType == 'image' ? 'img' : mediaType;\n\n  token = state.push(mediaType, tag, 0);\n  token.attrs = attrs = [\n    ['src', href]\n  ];\n  if (mediaType == 'image')\n    attrs.push(['alt', '']);\n  token.children = tokens;\n  token.content = content;\n\n  if (title)\n    attrs.push(['title', title]);\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n\n}\n\n\n/**\n * Guess the media type represented by a URL based on the file extension,\n * if any\n *\n * @param {String} url\n *  any valid URL\n * @returns {String}\n *  a type identifier: 'image' (default for all unrecognized URLs), 'audio'\n *  or 'video'\n * @memberof HTML5Media\n */\nfunction guessMediaType(url) {\n  const extensionMatch = url.match(/\\.([^/.]+)$/);\n  if (extensionMatch === null)\n    return 'image';\n  const extension = extensionMatch[1];\n  if (validAudioExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'audio';\n  else if (validVideoExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'video';\n  else\n    return 'image';\n}\n\n\n/**\n * Render tokens of the video/audio type to HTML5 tags\n *\n * @param {Object} tokens\n *  token stream\n * @param {Number} idx\n *  which token are we rendering\n * @param {Object} options\n *  Markdown-It options, including this plugin's settings\n * @param {Object} env\n *  Markdown-It environment, potentially including language setting\n * @param {MarkdownIt} md\n *  instance used for utilities access\n * @returns {String}\n *  rendered token\n * @memberof HTML5Media\n */\nfunction renderMedia(tokens, idx, options, env, md) {\n  const token = tokens[idx];\n  const type = token.type;\n  if (type !== 'video' && type !== 'audio')\n    return '';\n  let attrs = options.html5Media[`${type}Attrs`].trim();\n  if (attrs)\n    attrs = ' ' + attrs;\n\n  // We'll always have a URL for non-image media: they are detected by URL\n  const url = token.attrs[token.attrIndex('src')][1];\n\n  // Title is set like this: ![descriptive text](video.mp4 \"title\")\n  const title = token.attrIndex('title') != -1 ?\n    ` title=\"${md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1])}\"` :\n    '';\n\n  const fallbackText =\n    translate(env.language, `html5 ${type} not supported`) + '\\n' +\n    translate(env.language, 'html5 media fallback link', [url]);\n\n  const description = token.content ?\n    '\\n' + translate(env.language, 'html5 media description', [md.utils.escapeHtml(token.content)]) :\n    '';\n\n  return `<${type} src=\"${url}\"${title}${attrs}>\\n` +\n    `${fallbackText}${description}\\n` +\n    `</${type}>`;\n}\n\n\n/**\n * The main plugin function, exported as module.exports\n *\n * @param {MarkdownIt} md\n *  instance, automatically passed by md.use\n * @param {Object} [options]\n *  configuration\n * @param {String} [options.videoAttrs='controls class=\"html5-video-player\"']\n *  attributes to include inside `<video>` tags\n * @param {String} [options.audioAttrs='controls class=\"html5-audio-player\"']\n *  attributes to include inside `<audio>` tags\n * @param {MessagesObj} [options.messages=built-in messages]\n *  human-readable text that is part of the output\n * @memberof HTML5Media\n */\nfunction html5Media(md, options = {}) {\n  if (options.messages)\n    messages = options.messages;\n  if (options.translateFn)\n    translate = options.translateFn;\n\n  const videoAttrs = options.videoAttrs !== undefined ?\n    options.videoAttrs :\n    'controls class=\"html5-video-player\"';\n  const audioAttrs = options.audioAttrs !== undefined ?\n    options.audioAttrs :\n    'controls class=\"html5-audio-player\"';\n\n  md.inline.ruler.at('image', (tokens, silent) => tokenizeImagesAndMedia(tokens, silent, md));\n\n  md.renderer.rules.video = md.renderer.rules.audio =\n    (tokens, idx, opt, env) => {\n      opt.html5Media = {\n        videoAttrs,\n        audioAttrs\n      };\n      return renderMedia(tokens, idx, opt, env, md);\n    };\n}\n\nmodule.exports = {\n  html5Media,\n  messages, // For partial customization of messages\n  guessMediaType\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Object","defineProperty","exports","value","Markdown","require","markdown","tslib","React","markdownIt","markdownItHtml5Media","_interopDefaultLegacy","e","React__default","doMarkdown","content","options","set","render","use","html5Media","_super","props","_this","call","this","htmlRef","bind","__extends","prototype","dom","_render","componentDidUpdate","nextProps","__awaiter","_a","__generator","_b","innerHTML","createElement","className","ref","defaultProps","linkify","Component","assign","obj","sources","Array","slice","arguments","forEach","source","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","reduce","acc","k","hasOwnProperty","add","definition","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","validAudioExtensions","validVideoExtensions","messages","en","translate","language","messageKey","messageParams","message","param","tokenizeImagesAndMedia","state","silent","md","attrs","code","label","labelEnd","labelStart","res","title","token","tokens","href","oldPos","max","posMax","src","charCodeAt","helpers","parseLinkLabel","utils","isSpace","parseLinkDestination","ok","normalizeLink","validateLink","parseLinkTitle","env","references","normalizeReference","inline","parse","mediaType","guessMediaType","tag","children","extensionMatch","extension","renderMedia","type","trim","attrIndex","escapeHtml","fallbackText","description","translateFn","videoAttrs","undefined","audioAttrs","ruler","at","renderer","rules","video","audio","opt","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","unescapeAll","escaped","entity","parseInt","replaceEntityPattern","arrayReplaceAt","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","toUpperCase","level","lines","disableNested","found","marker","prevPos","skipToken","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","configure","presets","components","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","plugin","args","apply","State","process","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","before","beforeName","ruleName","splice","after","afterName","chainName","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","lc","isLetter","parseReference","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","attrGet","attrJoin","decodeCache","string","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","parts","encoded","array","ucs2decode","output","counter","extra","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","codePoint","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z","_iterableToArray","iter","Symbol","iterator","_toConsumableArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray"],"sourceRoot":""}